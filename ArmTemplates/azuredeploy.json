{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "10.13.0.0",
    "metadata": {
        "description": "Installs the Cosmos CMS with options for email service, and app service plan <a target='_blank' href='https://cosmos.moonrise.net/install'>(see docs)</a>."
    },
    "parameters": {
        "noReplyEmailAddress": {
            "type": "string",
            "metadata": {
                "description": "Enter the 'no reply' email address for your SMTP domain."
            }
        },
        "azureCommunicationsConnectionString": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "If you are using Azure Communications for email, enter connection string <a target='_blank' href='https://cosmos.moonrise.net/install#Com'>(see docs)</a>."
            }
        },
        "sendGridApiKey": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "If you are using SendGrid for email, enter API key <a target='_blank' href='https://cosmos.moonrise.net/install#SendGrid'>(see docs)</a>."
            }
        },
        "smtpHostName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "If you are using an SMTP relay, enter host name. Example: smtp.mycompany.com <a target='_blank' href='https://cosmos.moonrise.net/install#SMTP'>(see docs)</a>."
            }
        },
        "smtpPort": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "If you are using an SMTP relay, enter port number. Example: 587  <a target='_blank' href='https://cosmos.moonrise.net/install#SMTP'>(see docs)</a>."
            }
        },
        "smtpEnableSsl": {
            "type": "string",
            "defaultValue": "",
            "allowedValues": [
                "",
                "true",
                "false"
            ],
            "metadata": {
                "description": "If you are using an SMTP relay, enter true or false to enable TLS/SSL  <a target='_blank' href='https://cosmos.moonrise.net/install#SMTP'>(see docs)</a>."
            }
        },
        "smtpUserName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "If you are using an SMTP relay, enter user name. Example: smtpEmailUser  <a target='_blank' href='https://cosmos.moonrise.net/install#SMTP'>(see docs)</a>."
            }
        },
        "smtpPassword": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "If you are using an SMTP relay, enter user password  <a target='_blank' href='https://cosmos.moonrise.net/install#SMTP'>(see docs)</a>."
            }
        },
        "webAppPlanChoice": {
            "type": "string",
            "defaultValue": "Premium Tier",
            "allowedValues": [
                "Basic Tier",
                "Premium Tier"
            ],
            "metadata": {
                "description": "Your choice of app service plan can be changed after installation <a target='_blank' href='https://cosmos.moonrise.net/install#Plan'>(see docs)</a>."
            }
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Locally-redundant storage",
            "allowedValues": [
                "Locally-redundant storage",
                "Geo-redundant storage"
            ],
            "metadata": {
                "description": "For static websites, choose Geo-redundant to have your website hosted in two different regions <a target='_blank' href='https://cosmos.moonrise.net/install#Storage'>(see docs)</a>."
            }
        }
    },
    "functions": [],
    "variables": {
        "adminEmail": "[parameters('noReplyEmailAddress')]",
        "cosmosSendGridApiKey": "[parameters('sendGridApiKey')]",
        "webAppPlanSku": "[concat(if(equals(parameters('webAppPlanChoice'), 'Free Tier'), 'F1', ''),if(equals(parameters('webAppPlanChoice'), 'Shared Tier'), 'D1', ''),if(equals(parameters('webAppPlanChoice'), 'Basic Tier'), 'B3', ''), if(equals(parameters('webAppPlanChoice'), 'Standard Tier'), 'S1', ''), if(equals(parameters('webAppPlanChoice'), 'Premium Tier'), 'P0v3', ''))]",
        "webAppTier": "[concat(if(equals(parameters('webAppPlanChoice'), 'Free Tier'), 'Free', ''),if(equals(parameters('webAppPlanChoice'), 'Shared Tier'), 'Shared', ''),if(equals(parameters('webAppPlanChoice'), 'Basic Tier'), 'Basic', ''),if(equals(parameters('webAppPlanChoice'), 'Standard Tier'), 'Standard', ''))]",
        "webAppFamily": "[concat(if(equals(parameters('webAppPlanChoice'), 'Free Tier'), 'F', ''),if(equals(parameters('webAppPlanChoice'), 'Shared Tier'), 'D', ''),if(equals(parameters('webAppPlanChoice'), 'Basic Tier'), 'B', ''),if(equals(parameters('webAppPlanChoice'), 'Standard Tier'), 'S', ''))]",
        "appServicePlanName": "[concat('appplan', uniquestring(resourceGroup().id))]",
        "location": "[resourceGroup().location]",
        "fileShareName": "data-sqlite",
        "smtpEmailProviderOptions__Host": "[parameters('smtpHostName')]",
        "smtpEmailProviderOptions__Port": "[parameters('smtpPort')]",
        "smtpEmailProviderOptions__EnableSsl": "[parameters('smtpEnableSsl')]",
        "smtpEmailProviderOptions__UserName": "[parameters('smtpUserName')]",
        "smtpEmailProviderOptions__Password": "[parameters('smtpPassword')]",
        "storageAccountName": "[concat('files', uniquestring(resourceGroup().id))]",
        "storageAccountType": "[parameters('storageAccountType')]",
        "editorName": "[concat('editor-', uniquestring(resourceGroup().id))]",
        "publisherName": "[concat('publisher-', uniquestring(resourceGroup().id))]",
        "azureCommunicationConnection": "[parameters('azureCommunicationsConnectionString')]"
    },
    "resources": [
        {
            "name": "[variables('storageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-04-01",
            "tags": {},
            "location": "[resourceGroup().location]",
            "kind": "StorageV2",
            "sku": {
                "name": "[if(equals(variables('storageAccountType'), 'Locally-redundant storage'), 'Standard_LRS', 'Standard_RAGRS')]",
                "tier": "Standard"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2021-04-01",
            "name": "[format('{0}/default/{1}', variables('storageAccountName'), '$web')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2023-01-01",
            "name": "[concat(variables('storageAccountName'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "properties": {
                "shareDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2023-01-01",
            "name": "[concat(variables('storageAccountName'), '/default/', variables('fileShareName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', variables('storageAccountName'), 'default')]"
            ],
            "properties": {
                "shareQuota": 1,
                "enabledProtocols": "SMB"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2020-12-01",
            "name": "[variables('appServicePlanName')]",
            "location": "[variables('location')]",
            "sku": {
                "name": "[variables('webAppPlanSku')]",
                "tier": "[variables('webAppTier')]",
                "size": "[variables('webAppPlanSku')]",
                "family": "[variables('webAppFamily')]",
                "capacity": 1
            },
            "kind": "linux",
            "properties": {
                "perSiteScaling": false,
                "elasticScaleEnabled": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0,
                "zoneRedundant": false
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2020-12-01",
            "name": "[variables('editorName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "kind": "app,linux,container",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(variables('editorName'), '.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(variables('editorName'), '.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {
                    "numberOfWorkers": 1,
                    "linuxFxVersion": "DOCKER|toiyabe/sky-editor:latest",
                    "acrUseManagedIdentityCreds": false,
                    "alwaysOn": true,
                    "http20Enabled": true,
                    "functionAppScaleLimit": 0,
                    "minimumElasticInstanceCount": 1
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "clientCertMode": "Required",
                "hostNamesDisabled": false,
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": true,
                "redundancyMode": "None",
                "storageAccountRequired": false,
                "keyVaultReferenceIdentity": "SystemAssigned"
            },
            "resources": [
                {
                    "name": "appsettings",
                    "type": "config",
                    "apiVersion": "2020-12-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('editorName'))]"
                    ],
                    "tags": {
                        "displayName": "appsettings"
                    },
                    "properties": {
                        "AzureBlobStorageEndPoint": "/",
                        "AdminEmail": "[variables('adminEmail')]",
                        "CosmosAllowSetup": "true",
                        "CosmosSendGridApiKey": "[variables('cosmosSendGridApiKey')]",
                        "CosmosPublisherUrl": "[concat('https://', variables('publisherName'), '.azurewebsites.net')]",
                        "SmtpEmailProviderOptions__Host": "[variables('smtpEmailProviderOptions__Host')]",
                        "SmtpEmailProviderOptions__Port": "[variables('smtpEmailProviderOptions__Port')]",
                        "SmtpEmailProviderOptions__EnableSsl": "[variables('smtpEmailProviderOptions__EnableSsl')]",
                        "SmtpEmailProviderOptions__UserName": "[variables('smtpEmailProviderOptions__UserName')]",
                        "SmtpEmailProviderOptions__Password": "[variables('smtpEmailProviderOptions__Password')]",
                        "DOCKER_REGISTRY_SERVER_PASSWORD": "",
                        "DOCKER_REGISTRY_SERVER_URL": "https://index.docker.io",
                        "DOCKER_REGISTRY_SERVER_USERNAME": "",
                        "WEBSITES_ENABLE_APP_SERVICE_STORAGE": "false"
                    }
                },
                {
                    "name": "connectionStrings",
                    "type": "config",
                    "apiVersion": "2020-12-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('editorName'))]"
                    ],
                    "properties": {
                        "ApplicationDbContextConnection": {
                            "value": "Data Source=/data/sqlite/skycms.db",
                            "type": "Custom"
                        },
                        "StorageConnectionString": {
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',concat(listKeys(concat(resourceGroup().id,'/providers/Microsoft.Storage/storageAccounts/', variables('storageAccountName')),'2015-05-01-preview').key1))]",
                            "type": "Custom"
                        },
                        "AzureCommunicationConnection": {
                            "value": "[variables('azureCommunicationConnection')]",
                            "type": "Custom"
                        }
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2023-01-01",
            "name": "[concat(variables('editorName'), '/web')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('editorName'))]"
            ],
            "properties": {
                "numberOfWorkers": "1",
                "defaultDocuments": "Default.htm,Default.html,Default.asp,index.htm,index.html,default.aspx",
                "netFrameworkVersion": "v6.0",
                "linuxFxVersion": "DOCKER|toiyabe/sky-editor:latest",
                "requestTracingEnabled": "false",
                "remoteDebuggingEnabled": "false",
                "httpLoggingEnabled": "false",
                "logsDirectorySizeLimit": "35",
                "detailedErrorLoggingEnabled": "false",
                "use32BitWorkerProcess": "false",
                "webSocketsEnabled": "false",
                "alwaysOn": "true",
                "autoHealEnabled": "false",
                "localMySqlEnabled": "false",
                "http20Enabled": "true",
                "minTlsVersion": "1.2",
                "ftpsState": "Disabled",
                "azureStorageAccounts": {
                    "sharedsqlite": {
                        "type": "AzureFiles",
                        "accountName": "[variables('storageAccountName')]",
                        "shareName": "data-sqlite",
                        "accessKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2022-09-01').keys[0].value]",
                        "mountPath": "/data/sqlite"
                    }
                },
                "storageAccountUrl": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').primaryEndpoints.web]"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2020-12-01",
            "name": "[variables('publisherName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "kind": "app,linux,container",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(variables('publisherName'), '.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(variables('publisherName'), '.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {
                    "numberOfWorkers": 1,
                    "linuxFxVersion": "DOCKER|toiyabe/sky-publisher:latest",
                    "acrUseManagedIdentityCreds": false,
                    "alwaysOn": true,
                    "http20Enabled": true,
                    "functionAppScaleLimit": 0,
                    "minimumElasticInstanceCount": 1,
                    "healthCheckPath": "/Identity/Account/Login"
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": true,
                "clientCertEnabled": false,
                "clientCertMode": "Required",
                "hostNamesDisabled": false,
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": true,
                "redundancyMode": "None",
                "storageAccountRequired": false,
                "keyVaultReferenceIdentity": "SystemAssigned"
            },
            "resources": [
                {
                    "name": "appsettings",
                    "type": "config",
                    "apiVersion": "2020-12-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('publisherName'))]"
                    ],
                    "tags": {
                        "displayName": "appsettings"
                    },
                    "properties": {
                        "AdminEmail": "[variables('adminEmail')]",
                        "CosmosStaticWebPages": "true",
                        "AzureBlobStorageEndPoint": "/",
                        "CosmosSendGridApiKey": "[variables('cosmosSendGridApiKey')]",
                        "SmtpEmailProviderOptions__Host": "[variables('smtpEmailProviderOptions__Host')]",
                        "SmtpEmailProviderOptions__Port": "[variables('smtpEmailProviderOptions__Port')]",
                        "SmtpEmailProviderOptions__EnableSsl": "[variables('smtpEmailProviderOptions__EnableSsl')]",
                        "SmtpEmailProviderOptions__UserName": "[variables('smtpEmailProviderOptions__UserName')]",
                        "SmtpEmailProviderOptions__Password": "[variables('smtpEmailProviderOptions__Password')]",
                        "DOCKER_REGISTRY_SERVER_PASSWORD": "",
                        "DOCKER_REGISTRY_SERVER_URL": "https://index.docker.io",
                        "DOCKER_REGISTRY_SERVER_USERNAME": "",
                        "WEBSITES_ENABLE_APP_SERVICE_STORAGE": "false"
                    }
                },
                {
                    "name": "connectionStrings",
                    "type": "config",
                    "apiVersion": "2020-12-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('publisherName'))]"
                    ],
                    "properties": {
                        "ApplicationDbContextConnection": {
                            "value": "Data Source=/data/sqlite/skycms.db",
                            "type": "Custom"
                        },
                        "StorageConnectionString": {
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',concat(listKeys(concat(resourceGroup().id,'/providers/Microsoft.Storage/storageAccounts/', variables('storageAccountName')),'2015-05-01-preview').key1))]",
                            "type": "Custom"
                        },
                        "AzureCommunicationConnection": {
                            "value": "[variables('azureCommunicationConnection')]",
                            "type": "Custom"
                        }
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2023-01-01",
            "name": "[concat(variables('publisherName'), '/web')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('publisherName'))]"
            ],
            "properties": {
                "numberOfWorkers": "1",
                "defaultDocuments": "Default.htm,Default.html,Default.asp,index.htm,index.html,default.aspx",
                "netFrameworkVersion": "v6.0",
                "linuxFxVersion": "DOCKER|toiyabe/sky-publisher:latest",
                "requestTracingEnabled": "false",
                "remoteDebuggingEnabled": "false",
                "httpLoggingEnabled": "false",
                "logsDirectorySizeLimit": "35",
                "detailedErrorLoggingEnabled": "false",
                "use32BitWorkerProcess": "false",
                "webSocketsEnabled": "false",
                "alwaysOn": "true",
                "autoHealEnabled": "false",
                "localMySqlEnabled": "false",
                "http20Enabled": "true",
                "minTlsVersion": "1.2",
                "ftpsState": "Disabled"
            }
        }
    ],
    "outputs": {}
}