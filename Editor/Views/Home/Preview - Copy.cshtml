@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@model ArticleViewModel
@{
    if (string.IsNullOrEmpty(Context.Request.Query["standalone"]))
    {
        Layout = null;
    }
}
@using Cosmos.Cms.Controllers
<!DOCTYPE HTML>
<html lang="@Model.LanguageCode">
<head>
    <title>@Model.Title</title>
    <meta property="og:title" content="@Model.Title" />
    <meta property="og:url" content="@Model.OGUrl" />
    <meta property="og:type" content="article" />
    <meta property="og:image" content="@Model.OGImage" />
    <meta property="article:modified_time" content="@Model.Updated.ToString("u")">
    <meta name="cwps-meta-path-url" content="@Model.UrlPath" />
    <meta name="cwps-meta-path-updated" content="@Model.Updated" />
    <meta name="cwps-meta-path-title" content="@Model.Title" />
    <meta name="cwps-meta-author-info" content="@Model.AuthorInfo" />
    <meta name="cwps-meta-af-value" content="@Antiforgery.GetAndStoreTokens(Context).RequestToken" />

    @Html.Raw(Model.Layout.Head)
    <link rel="stylesheet" href="/lib/ckeditor/ckeditor5-content.css" />
    <script async charset="utf-8" src="https://cdn.embedly.com/widgets/platform.js"></script>
    @Html.Raw(Model.HeadJavaScript)
    @Html.Raw(JavaScriptSnippet.FullScript)
</head>
<body>
    @Html.Raw(Model.Layout.HtmlHeader)
    @Html.Raw(Model.Content)
    @Html.Raw(Model.Layout.FooterHtmlContent)
    @Html.Raw(Model.FooterJavaScript)
</body>
</html>
