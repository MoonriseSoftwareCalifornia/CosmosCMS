@using Sky.Editor.Data.Logic
@using Microsoft.Extensions.Options;
@inject IEditorSettings options
@{
    ViewData["Title"] = "Site Design Version List";
    var showFirstPageBtn = (bool)ViewData["ShowFirstPageBtn"];
    var showCreateFirstLayout = (bool)ViewData["ShowCreateFirstLayout"];
}
<link href="~/lib/tabulator-tables/dist/css/tabulator_midnight.css" rel="stylesheet" />
<script src="~/lib/luxon/luxon.min.js"></script>
<script src="~/lib/tabulator-tables/dist/js/tabulator.min.js"></script>
<script src="~/js/clipboard.min.js"></script>
<style>
    .fs-small {
        font-size: 0.8em;
    }
</style>

<div class="pt-3">
    <div class="container">
        @if (showCreateFirstLayout)
        {
            <div class="row justify-content-center">
                <div class="col-md-10 text-light">
                    <h1>Site Design</h1>
                    <p>&quot;Designs&quot; provide a common functionality, look and feel across all pages on your website.</p>
                    <h4>Choose a pre-built website design (recommended)</h4>
                    <div class="ms-5 mb-5">
                        <p class="mb-3">These designs are ready for use and some are designed for non-technical users.  The is the recommened choice for most users.</p>
                        <a class="btn btn-sm btn-primary" asp-action="CommunityLayouts">Choose pre-built <i class="fa-solid fa-circle-arrow-right"></i></a>
                    </div>
                    <h4>Build your own website design (advanced)</h4>
                    <div class="ms-5 mb-3">
                        <p>If you are working with a web developer with at least basic HTML, CSS and JavaScript experience, you can choose to build a design from scratch that meets your specific needs.</p>
                        <a class="btn btn-small btn-primary" asp-action="Create">Choose custom <i class="fa-solid fa-circle-arrow-right"></i></a>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="row">
                <div class="col">
                    <h3 class="text-light">@ViewData["Title"]</h3>
                    @if (showFirstPageBtn && showCreateFirstLayout == false)
                    {
                        <a class="btn btn-sm btn-primary" title="Create website home page" href="/Editor/Create">Create Home Page <i class="fa-solid fa-circle-arrow-right"></i></a>
                    }
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="btn-group" role="group" aria-label="Page Actions">
                        <a class="btn btn-sm btn-primary" href="@Url.Action("Create")">New design</a>
                        <a class="btn btn-sm btn-secondary" title="Edit layout code." href="@Url.Action("EditCode")"><i class="fa-solid fa-code"></i> Code</a>
                        <a class="btn btn-sm btn-secondary" title="Edit with the designer tool." href="@Url.Action("Designer")"><i class="fa-solid fa-wand-magic-sparkles"></i> Design</a>
                        <a class="btn btn-sm btn-secondary" title="Edit design title and notes." href="@Url.Action("EditNotes")"><i class="fa-solid fa-pen-to-square"></i> Notes</a>
                        <a class="btn btn-sm btn-secondary" title="Import one of the community layouts." href="@Url.Action("CommunityLayouts")">Import design <i class="fa-solid fa-cloud-arrow-down"></i></a>
                        <a class="btn btn-sm btn-secondary" title="Return to page list" href="@Url.Action("Index", "Editor")">Page list <i class="fa-solid fa-circle-arrow-right"></i></a>
                    </div>
                </div>
            </div>
            <div class="row cpws-table-pager-row-top">
                <div class="col-md-12 d-flex">
                   &nbsp;
                </div>
            </div>
            <div class="row bg-dark">
                <div class="col-md-12">
                    <div id="pagelist-table" class="table-dark"></div>
                </div>
            </div>
            <div class="row cpws-table-pager-row-bottom">
                <div class="col-md-12 d-flex justify-content-center">
                    &nbsp;
                </div>
            </div>
        }
    </div>
</div>

<script>

    const publisherUrl = "@options.PublisherUrl.TrimEnd('/')";
    const tblHeight = window.innerHeight - 200;
    let pageSize = Math.round(tblHeight / 50) + 1;

    function dateTime(cell, formatterParams, onRendered){
        //cell - the cell component
        //formatterParams - parameters set for the column
        //onRendered - function to call when the formatter has been rendered
        return getLocalTime(cell.getValue());
    }

    function dateFilterFunction(headerValue, rowValue, rowData, filterParams){
        if (rowValue === null || rowValue === "") {
            return false;
        }
        return headerValue === rowValue.split("T")[0]; //must return a boolean, true if it passes the filter.
    }

    const menuBar = function(cell, formatterParams){
        data = cell.getRow().getData();

        let html = "<div class='btn-group btn-group-sm' role='group' aria-label='Page actions.'>";
        html += "<btn onclick='viewCode(\"" + data.Id + "\")' title='View code in read-only mode.' class='btn btn-sm btn-secondary'><i class='fa-solid fa-file-code'></i></btn>";
        if (data.IsDefault === true){
            html += "<div title='Published design.' class='btn btn-sm btn-primary'><i class='fa-solid fa-circle-check'></i></div>";
        } else {
            html += "<div title='Published design.' class='btn btn-sm btn-secondary'><i class='fa-solid fa-xmark'></i></div>";
        }
        html += "<btn onclick='promote(\"" + data.Id + "\")' title='Create new version from this one.' class='btn btn-sm btn-secondary'><i class='fa-solid fa-square-caret-up'></i></btn>";
        html += "</div>";

        return html;
    };

    const pageTable = new Tabulator("#pagelist-table", {
        height:tblHeight + "px",
        pagination:true, //enable pagination
        paginationMode:"local", //enable local pagination
        paginationSize:pageSize, //optional parameter to request a certain number of rows per page
        persistence:{
            sort: true, //persist column sorting
            filter: true, //persist filters
            headerFilter: true, //persist header filters
            group: false, //persist row grouping
            page: true, //persist page
            columns: false, //persist columns
        },
        persistenceWriterFunc:function(id, type, data){
            //id - tables persistence id
            //type - type of data being persisted ("sort", "filter", "group", "page" or "columns")
            //data - array or object of data
            sessionStorage.setItem(id + "-" + type, JSON.stringify(data));
        },
        persistenceReaderFunc:function(id, type){
            //id - tables persistence id
            //type - type of data being persisted ("sort", "filter", "group", "page" or "columns")
            var data = sessionStorage.getItem(id + "-" + type);
            return data ? JSON.parse(data) : false;
        },
        layout:"fitColumns",
        ajaxURL:"@Url.Action("GetLayouts", "Layouts")", //ajax URL
        columns:[
                {title:"Id", field:"Id", visible: false },
                {title:"Notes", field:"Notes", visible: false },

                {title:"Actions", field:"IsDefault", formatter:menuBar, width:100, headerSort: false },

                {title:"Version", field:"Version", width: 25},

                {title:"Published",
                    field:"Published",
                    headerFilter:"date",
                    headerFilterFunc:dateFilterFunction,
                    width:180,
                    sorter:"datetime",
                    sorterParams:{
                        format:"iso" },
                    formatter:"datetime",
                    formatterParams:{
                        inputFormat:"iso",
                        outputFormat:"MM/dd/yyyy HH:mm:ss",
                        invalidPlaceholder:"(Invalid date)"
                    }
                },
                {title:"Modified",
                    field:"LastModified",
                    headerFilter:"date",
                    headerFilterFunc:dateFilterFunction,
                    width:180,
                    sorter:"datetime",
                    sorterParams:{
                        format:"iso" },
                    formatter:"datetime",
                    formatterParams:{
                        inputFormat:"iso",
                        outputFormat:"MM/dd/yyyy HH:mm:ss",
                        invalidPlaceholder:"(Invalid date)"
                    }
                },

                {title:"Name", field:"LayoutName", sorter:"string", headerFilter:"input" }
            ],
        });

    function viewCode(id) {
        const url = "@Url.Action("EditCode", "Layouts")/" + id;
        window.open(url, '_blank');
    }

    function promote(id) {
        $.get("@Url.Action("Promote", "Layouts")/" + id, function (data) {
            pageTable.setData();
        });
    }

    $(document).ready(function () {
        $("body").addClass("cwps-editor-container");
    });
</script>
